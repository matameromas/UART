
P1-Serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000178  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  000001ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000742  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ab  00000000  00000000  000009d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000491  00000000  00000000  00001081  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000005c  00000000  00000000  00001514  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006a19  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000077  00000000  00000000  00007f89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00008000  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000010a  00000000  00000000  00008028  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	70 d0       	rcall	.+224    	; 0x166 <main>
  86:	76 c0       	rjmp	.+236    	; 0x174 <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <UART_init>:
	
	
}
void setup_timer(void)
{
	TCCR1B = (1<<CS11)|(1<<CS10);    //1:64 prescaler (meterlo en timer_init)
  8a:	80 e1       	ldi	r24, 0x10	; 16
  8c:	8b b9       	out	0x0b, r24	; 11
  8e:	8a b9       	out	0x0a, r24	; 10
  90:	08 95       	ret

00000092 <UART_send>:
  92:	cf 93       	push	r28
  94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  9c:	26 5e       	subi	r18, 0xE6	; 230
  9e:	3f 4f       	sbci	r19, 0xFF	; 255
  a0:	30 93 02 01 	sts	0x0102, r19	; 0x800102 <value_OUTCOMP+0x1>
  a4:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <value_OUTCOMP>
  a8:	1b b8       	out	0x0b, r1	; 11
  aa:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <value_OUTCOMP>
  ae:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <value_OUTCOMP+0x1>
  b2:	e4 e8       	ldi	r30, 0x84	; 132
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	41 e0       	ldi	r20, 0x01	; 1
  b8:	50 e0       	ldi	r21, 0x00	; 0
  ba:	a8 95       	wdr
  bc:	20 81       	ld	r18, Z
  be:	31 81       	ldd	r19, Z+1	; 0x01
  c0:	94 2f       	mov	r25, r20
  c2:	26 17       	cp	r18, r22
  c4:	37 07       	cpc	r19, r23
  c6:	08 f4       	brcc	.+2      	; 0xca <UART_send+0x38>
  c8:	95 2f       	mov	r25, r21
  ca:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
  ce:	99 23       	and	r25, r25
  d0:	a1 f3       	breq	.-24     	; 0xba <UART_send+0x28>
  d2:	a8 e0       	ldi	r26, 0x08	; 8
  d4:	c0 e1       	ldi	r28, 0x10	; 16
  d6:	b0 e0       	ldi	r27, 0x00	; 0
  d8:	e4 e8       	ldi	r30, 0x84	; 132
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	61 e0       	ldi	r22, 0x01	; 1
  de:	7b 2f       	mov	r23, r27
  e0:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <value_OUTCOMP>
  e4:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <value_OUTCOMP+0x1>
  e8:	26 5e       	subi	r18, 0xE6	; 230
  ea:	3f 4f       	sbci	r19, 0xFF	; 255
  ec:	30 93 02 01 	sts	0x0102, r19	; 0x800102 <value_OUTCOMP+0x1>
  f0:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <value_OUTCOMP>
  f4:	80 fd       	sbrc	r24, 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <UART_send+0x6a>
  f8:	9b 2f       	mov	r25, r27
  fa:	01 c0       	rjmp	.+2      	; 0xfe <UART_send+0x6c>
  fc:	9c 2f       	mov	r25, r28
  fe:	9b b9       	out	0x0b, r25	; 11
 100:	86 95       	lsr	r24
 102:	b0 93 00 01 	sts	0x0100, r27	; 0x800100 <_edata>
 106:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <value_OUTCOMP>
 10a:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <value_OUTCOMP+0x1>
 10e:	a8 95       	wdr
 110:	20 81       	ld	r18, Z
 112:	31 81       	ldd	r19, Z+1	; 0x01
 114:	96 2f       	mov	r25, r22
 116:	24 17       	cp	r18, r20
 118:	35 07       	cpc	r19, r21
 11a:	08 f4       	brcc	.+2      	; 0x11e <UART_send+0x8c>
 11c:	97 2f       	mov	r25, r23
 11e:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
 122:	99 23       	and	r25, r25
 124:	a1 f3       	breq	.-24     	; 0x10e <UART_send+0x7c>
 126:	a1 50       	subi	r26, 0x01	; 1
 128:	d9 f6       	brne	.-74     	; 0xe0 <UART_send+0x4e>
 12a:	80 e1       	ldi	r24, 0x10	; 16
 12c:	8b b9       	out	0x0b, r24	; 11
 12e:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <value_OUTCOMP>
 132:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <value_OUTCOMP+0x1>
 136:	46 5e       	subi	r20, 0xE6	; 230
 138:	5f 4f       	sbci	r21, 0xFF	; 255
 13a:	50 93 02 01 	sts	0x0102, r21	; 0x800102 <value_OUTCOMP+0x1>
 13e:	40 93 01 01 	sts	0x0101, r20	; 0x800101 <value_OUTCOMP>
 142:	e4 e8       	ldi	r30, 0x84	; 132
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	a8 95       	wdr
 14c:	20 81       	ld	r18, Z
 14e:	31 81       	ldd	r19, Z+1	; 0x01
 150:	89 2f       	mov	r24, r25
 152:	24 17       	cp	r18, r20
 154:	35 07       	cpc	r19, r21
 156:	08 f4       	brcc	.+2      	; 0x15a <UART_send+0xc8>
 158:	86 2f       	mov	r24, r22
 15a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 15e:	88 23       	and	r24, r24
 160:	a1 f3       	breq	.-24     	; 0x14a <UART_send+0xb8>
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <main>:
}

void main(void)
{
	UART_init();
 166:	91 df       	rcall	.-222    	; 0x8a <UART_init>
	
	
}
void setup_timer(void)
{
	TCCR1B = (1<<CS11)|(1<<CS10);    //1:64 prescaler (meterlo en timer_init)
 168:	83 e0       	ldi	r24, 0x03	; 3
 16a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	setup_timer();
	
	for(;;)
	{
	    //Read timer value and act according with it
		UART_send(0xa0);
 16e:	80 ea       	ldi	r24, 0xA0	; 160
 170:	90 df       	rcall	.-224    	; 0x92 <UART_send>
		
    }
 172:	fd cf       	rjmp	.-6      	; 0x16e <main+0x8>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
